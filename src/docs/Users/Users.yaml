paths:
  /api/users/:
    get:
      tags:
        - Users
      summary: Obtiene todos los usuarios
      responses:
        "200":
          description: Los usuarios fueron obtenidos satisfactoriamente desde la base de datos
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor. Query defectuosa o fallo de conexión
    post:
      tags:
        - Users
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario y lo almacena ne la base de datos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuarios creado satisfactoriamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Datos de usuario invalidos.  
  /api/users/{uid}:
    get:
      tags:
        - Users
      summary: Obtiene un solo usuario a partir de un id
      parameters:
      - name: uid
        in: path
        required: true
        description: Id del usuario que se desea solicitar
        schema:
          type: string
      responses:
        "200":
          description: Usuarios encontrado satisfactoriamente desde la base de datos
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor. Query defectuosa o fallo de conexión
    put:
      sumary: Actualizar un usuario a partir de su id
      tags:
      - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: Id del usuario que se desea actualizar
        schema:
          $type: string
      requestBody:
        required: true
        content: 
            application/json:
              schema:
                $ref: '#components/requestBodies/updateUser'
      responses:
        "200":
          description: Usuarios actualizado satisfactoriamente
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor. Query defectuosa o fallo de conexión
    delete:
      tags:
      - Users
      summary: Eliminar un usuario
      description: Elimina un usuario existente por su ID.
      parameters:
        - name: uid
          in: path
          description: ID del usuario a eliminar
          required: true
      responses:
        '204':
          description: Usuario eliminado exitosamente
        '404':
          description: Usuario no encontrado
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por MongoDB
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo del usuario
        password:
          type: string
          description: Contraseña del usuario
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        last_connection:
          type: string
          description: Última vez que el usuario inició sesión
      example:
        _id: ObjectId("asdf23jnlfsdfascfas23")
        first_name: Fernando
        last_name: Conil
        email: jajajajajaja@gmail.com
        password: AquiIriaUnaContraseña
        documents:
          - name: Invoice
            url: https://example.com/invoice.pdf
          - name: Resume
            url: https://example.com/resume.pdf
        last_connection: 2024/11/12 12:05
    Document:
      type: object
      properties:
        name: 
          type: string
          description: Nombre del documento
        url:
          type: string
          description: url del documento
  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Correo del usuario
        password:
          type: String
          description: Contraseña del usuario
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        last_connection:
          type: string
          description: Última vez que el usuario inició sesión
      example:
        first_name: Juancito
        last_name: Gómez
        email: gomezjuancito@personalmail.com
        password: juancitoNoClavoNingunClavito
        documents:
          - name: Invoice
            url: https://example.com/invoice.pdf
          - name: Resume
            url: https://example.com/resume.pdf
        last_connection: 2024/11/12 12:05



paths:
  /api/pets/:
    get:
      tags:
        - Pets
      summary: Obtiene todos las mascotas
      responses:
        "200":
          description: Las mascotas fueron obtenidos satisfactoriamente desde la base de datos
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Pet'
        "500":
          description: Error interno del servidor. Query defectuosa o fallo de conexi칩n
    post:
      tags:
        - Pets
      summary: Crear una nueva mascota
      description: Crea una nueva mascota y la almacena en la base de datos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '201':
          description: Mascota creada satisfactoriamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Informacion de mascota no es v치lida

  /api/pets/{id}:
    get:
      tags:
        - Pets
      summary: Obtiene un solo usuario a partir de un id
      parameters:
        name: id
        in: path
        required: true
        description: Id de la mascota que se desea solicitar
        schema:
          $type: String
      responses:
        "200":
          description: Mascota encontrada satisfactoriamente desde la base de datos
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/Pet'
        "500":
          description: Error interno del servidor. Query defectuosa o fallo de conexi칩n
    put:
      sumary: Actualizar una mascota a partir de su id
      tags:
      - Pets
      parameters:
      - name: id
        in: path
        required: true
        description: Id del usuario que se desea actualizar
        schema:
          $type: string
      requestBody:
        required: true
        content: 
            application/json:
              schema:
                $ref: '#components/requestBodies/updatePet'
      responses:
        "200":
          description: Usuarios actualizado satisfactoriamente
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/Pet'
        "500":
          description: Error interno del servidor. Query defectuosa o fallo de conexi칩n
    delete:
      tags:
      - Pets
      summary: Eliminar una mascota
      description: Elimina una mascota existente por su ID.
      parameters:
        - name: uid
          in: path
          description: ID de a mascota a eliminar
          required: true
      responses:
        '204':
          description: Mascota eliminada exitosamente
        '404':
          description: Mascota no encontrado
components:
  schemas:
    Pet:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por MongoDB
        name:
          type: String
          description: Nombre de la mascota
        specie:
          type: String
          description: Especie de la mascota
        birthDate:
          type: date
          format: date
        owner:
          $ref: '#/components/schemas/User'
        image:
          type: String
          description: url de la imagen
      example:
        _id: ObjectId("asdf23jnlfsdrbhrgvbml")
        name: Manchita
        specie: Dog
        birthDate: 2023-11-12
        owner:
          _id: 64738ac21b5c45234567891
        image: https://example.com/whiskers.jpg
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por MongoDB
  requestBodies:
    updatePet:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por MongoDB
        name:
          type: String
          description: Nombre de la mascota
        specie:
          type: String
          description: Especie de la mascota
        birthDate:
          type: date
          format: date
        owner:
          $ref: '#/components/schemas/User'
        image:
          type: String
          description: url de la imagen
      example:
        _id: ObjectId("asdf23jnlfsdrbhrgvbml")
        name: Manchita
        specie: Dog
        birthDate: 2023-11-12
        owner:
          _id: 64738ac21b5c45234567891
        image: https://example.com/whiskers.jpg


        
